AWSTemplateFormatVersion: 2010-09-09
Description: Lambda
Resources:
  indexPhototest:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: photoalbumcoms2
        S3Key: index-photos.zip
      Description: Lambda function
      MemorySize: 128
      Environment:
        Variables:
          REGION: us-east-1
      Handler: lambda.lambda_handler
      CodeUri: ./index-photos
      Role: 'arn:aws:iam::284091107813:role/CloudFormationPipeline'
      Timeout: 30
      Runtime: python3.9
      FunctionName: test2-index-photos
  searchPhotostest:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: photoalbumcoms2
        S3Key: search-photos.zip
      Description: Lambda function for CD Demo
      MemorySize: 128
      Environment:
        Variables:
          REGION: us-east-1
      Handler: lambda.lambda_handler
      CodeUri: ./search-photos
      Role: 'arn:aws:iam::284091107813:role/CloudFormationPipeline'
      Timeout: 30
      Runtime: python3.9
      FunctionName: test2-search-photos
  ServerlessRestApiDeploymentb2888a1f04:
    Type: 'AWS::ApiGateway::Deployment'
    Properties:
      RestApiId: !Ref ServerlessRestApi
      Description: RestApi deployment
      StageName: Stage
  ServerlessRestApi:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Body:
        info:
          version: '1.0'
          title: !Ref 'AWS::StackName'
        paths:
          /search-photos:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub >-
                  arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${searchPhotostest.Arn}/invocations
              responses: {}
          /upload-photos:
            put:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub >-
                  arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${searchPhotostest.Arn}/invocations
              responses: {}
        swagger: '2.0'
  searchPhotosLambdaAPIPermissionProd:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      Principal: apigateway.amazonaws.com
      FunctionName: !Ref searchPhotostest
      SourceArn: !Sub
        - >-
          arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/search-photos
        - __Stage__: '*'
          __ApiId__: !Ref ServerlessRestApi
  photosBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: photoalbumcomstest
  ESInstance:
    Type: 'AWS::OpenSearchService::Domain'
    Properties:
      DomainName: photos-test7-domain
      ClusterConfig:
        InstanceType: t3.small.search
        InstanceCount: 1
      EBSOptions:
        EBSEnabled: True
        VolumeType: gp2
        VolumeSize: 10
